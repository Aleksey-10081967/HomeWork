# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :ipaserver => {
        :box_name => "centos/8",
        :ip_addr => '192.168.11.240',
  },
  :ipaclient=> {
        :box_name => "centos/8",
        :ip_addr => '192.168.11.241',
  }
 }

Vagrant.configure("2") do |config|
	config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
	config.vm.box_check_update = false
		MACHINES.each do |boxname, boxconfig|
			config.vm.define boxname do |box|
			box.vm.box = boxconfig[:box_name]
			box.vm.host_name = boxname.to_s
			box.vbguest.installer_options = { allow_kernel_upgrade: true }
			#box.vm.network "forwarded_port", guest: 3260, host: 3260+offset
			box.vm.network "private_network", ip: boxconfig[:ip_addr]
			box.vm.provider :virtualbox do |vb|
				vb.customize ["modifyvm", :id, "--memory", "2048"]
               		end
			box.vm.provision "shell", inline: <<-SHELL
				mkdir -p ~root/.ssh
				cp ~vagrant/.ssh/auth* ~root/.ssh
				sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config;
				systemctl restart sshd;

				adduser ansible
				echo "ansible:ansible" | chpasswd
				usermod -aG wheel ansible
				echo "%ansible ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/ansible

			SHELL
			end
		end

#	config.vm.provision "ansible" do |ansible|
		#ansible.verbose = "vvv"
#		ansible.playbook = "provisioning/playbook.yml"
#		ansible.become = "true"
#	end


config.vm.define "ipaserver" do |ipaserver|
		ipaserver.vm.provision "shell", inline: <<-SHELL

		timedatectl set-timezone Europe/Moscow

    sudo dnf -y install chrony
    sudo systemctl enable chronyd --now

		sudo dnf -y install nss
		sudo hostnamectl set-hostname ipaserver.ipatest.local

		sudo echo "127.0.0.1	localhost" > /etc/hosts
		sudo echo "192.168.11.240	ipaserver.ipatest.local ipaserver" >> /etc/hosts

		sudo setenforce 0
		sudo sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config

		systemctl start firewalld
		systemctl enable firewalld

		sudo firewall-cmd --add-service={freeipa-ldap,freeipa-ldaps,dns,ntp,http,https} --permanent
		sudo firewall-cmd --reload

		sudo dnf -y module enable idm:DL1
		udo dnf -y distro-sync
		sudo dnf -y install ipa-server
		sudo dnf -y install ipa-server-dns

		echo 'domain ipatest.local' > /etc/resolv.conf
		echo 'search ipatest.local' >> /etc/resolv.conf
		echo 'nameserver 127.0.0.1' >> /etc/resolv.conf
    ipa-server-install -a 12345678 --setup-dns --no-forwarders --no-reverse --hostname=ipaserver.ipatest.local -r IPATEST.LOCAL -p 12345678 -n ipatest.local -U
		echo '12345678' | kinit admin
    SHELL
 end

 config.vm.define "ipaclient" do |ipaclient|
		ipaclient.vm.provision "shell", inline: <<-SHELL

		hostnamectl set-hostname ipaclient02.ipatest.local
		sudo echo 'ipaclient02.ipatest.local' > /etc/hostname
		timedatectl set-timezone Europe/Moscow

        sudo dnf -y install chrony
		sudo systemctl enable chronyd --now

		sudo dnf -y install bind-utils

		sudo echo "127.0.0.1	localhost" > /etc/hosts
		sudo echo "192.168.11.240	ipaclient.ipatest.local ipaclient" >> /etc/hosts

		setenforce 0
		sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config

		sudo dnf -y install @idm:client
		#sudo dnf -y install freeipa-client

    systemctl start firewalld
		systemctl enable firewalld

		sudo firewall-cmd --add-service={freeipa-ldap,freeipa-ldaps,dns,ntp,http,https} --permanent
		sudo firewall-cmd --reload

    sudo echo 'domain ipatest.local' > /etc/resolv.conf
    sudo echo 'search ipatest.local' >> /etc/resolv.conf
    sudo echo 'nameserver 192.168.11.240' >> /etc/resolv.conf
    sudo ipa-client-install --domain=ipatest.local --server=ipaserver.ipatest.local --realm IPATEST.LOCAL --principal=admin --password=12345678 --mkhomedir --enable-dns-updates -U
		systemctl enable --now oddjobd.service
    authselect enable-feature with-mkhomedir
		systemctl restart oddjobd.service

   SHELL
 end
end
